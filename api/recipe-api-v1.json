{
  "openapi": "3.0.0",
  "info": {
    "title": "Recipe Management API",
    "version": "1.0.0",
    "description": "This is a simple API for managing recipes, including user authentication, user management, and recipe CRUD operations."
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Local development server"
    },
    {
      "url": "https://recipeapi.fly.dev",
      "description": "Server description"
    }
  ],
  "paths": {
    "/users/create": {
      "post": {
        "summary": "Create a new user",
        "operationId": "createUser",
        "requestBody": {
          "description": "User to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "User login",
        "operationId": "loginUser",
        "requestBody": {
          "description": "User login credentials",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginCredentials"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          }
        }
      }
    },
    "/recipes": {
      "post": {
        "summary": "Create a new recipe",
        "operationId": "createRecipe",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Recipe to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewRecipe"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Recipe created sucessfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Recipe"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "summary": "List all recipes",
        "operationId": "listRecipes",
        "responses": {
          "200": {
            "description": "A list of recipes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Recipe"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/recipes/{id}": {
      "get": {
        "summary": "Get a single recipe by ID",
        "operationId": "getRecipeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the recipe to get",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested recipe",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Recipe"
                }
              }
            }
          },
          "404": {
            "description": "Recipe not found"
          }
        }
      },
      "put": {
        "summary": "Update an existing recipe",
        "operationId": "updateRecipe",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Updated recipe information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewRecipe"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Recipe updated successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Recipe not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a recipe",
        "operationId": "deleteRecipe",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe deleted successfully"
          },
          "404": {
            "description": "Recipe not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "NewUser": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "LoginCredentials": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "NewRecipe": {
        "type": "object",
        "required": [
          "title",
          "description",
          "ingredients",
          "steps"
        ],
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "ingredients": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "steps": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Recipe": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NewRecipe"
          },
          {
            "type": "object",
            "required": [
              "id",
              "creatorId"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "creatorId": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}